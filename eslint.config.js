import js from '@eslint/js';import reactHooks from 'eslint-plugin-react-hooks';import reactRefresh from 'eslint-plugin-react-refresh';import tseslint from 'typescript-eslint';import { defineConfig, globalIgnores } from 'eslint/config';import tsPlugin from '@typescript-eslint/eslint-plugin';import tsParser from '@typescript-eslint/parser';import importPlugin from 'eslint-plugin-import';import jsxA11yPlugin from 'eslint-plugin-jsx-a11y';import prettierPlugin from 'eslint-plugin-prettier';import reactPlugin from 'eslint-plugin-react';export default defineConfig([  globalIgnores(['dist', 'node_modules']),  {    plugins: {      '@typescript-eslint': tsPlugin,      react: reactPlugin,      'jsx-a11y': jsxA11yPlugin,      prettier: prettierPlugin,      import: importPlugin,    },    extends: [      js.configs.recommended,      tseslint.configs.recommended,      reactHooks.configs['recommended-latest'],      reactRefresh.configs.vite,    ],    languageOptions: {      parser: tsParser,      parserOptions: {        ecmaVersion: 2021,        sourceType: 'module',        ecmaFeatures: { jsx: true },      },      globals: { React: 'readonly' },    },    settings: { react: { version: 'detect' } },    rules: {      semi: 'error',      'prefer-const': 'error',      camelcase: ['error', { properties: 'always' }],      'no-unused-vars': [        'error',        {          vars: 'all',          args: 'all',          argsIgnorePattern: '^_',          varsIgnorePattern: '^[A-Z0-9_]+$',          ignoreRestSiblings: false,          caughtErrors: 'none',        },      ],      '@typescript-eslint/explicit-module-boundary-types': 'off',      '@typescript-eslint/no-explicit-any': 'off',      'prettier/prettier': ['error', { endOfLine: 'auto' }],      'import/order': [        'error',        {          groups: ['builtin', 'external', 'parent', 'sibling', 'index'],          alphabetize: { order: 'asc' },        },      ],      'react-hooks/exhaustive-deps': 'off',      'jsx-a11y/label-has-associated-control': 'off',      'react/jsx-props-no-spreading': 'off',      'no-param-reassign': 'off',      'react/prop-types': 'off',      'react/button-has-type': 'off',      'react/no-array-index-key': 'off',      'react/destructuring-assignment': 'off',      'jsx-a11y/click-events-have-key-events': 'off',      'jsx-a11y/no-noninteractive-element-interactions': 'off',      'react/require-default-props': 'off',      'react/jsx-no-useless-fragment': 'off',      'react/jsx-no-constructed-context-values': 'off',      'react/no-unstable-nested-components': 'off',      'jsx-a11y/alt-text': 'off',      'jsx-a11y/no-static-element-interactions': 'off',      'linebreak-style': 'off',      '@typescript-eslint/ban-types': 'off',    },    files: ['**/*.ts', '**/*.tsx'],  },]);